FROM <IMAGE>
<QEMU>

ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG VERSION

ENV ARCH <ARCH>
COPY ./requirements.txt .
COPY ./gunicornup.sh /usr/local/bin/
COPY ./pythonstart.sh /usr/local/bin/

# Problem with dockerize on AARCH64, need to use armhf-version
RUN BUILD_DEPS="ca-certificates wget postgresql-dev musl-dev linux-headers g++ libpng-dev freetype-dev python3-dev" && \
    DOCKERIZE_ARCH=$(echo "${ARCH}" | sed -e "s/aarch64/armhf/g") && \
    apk add --update --no-cache python3 py3-pip postgresql-client sqlite libxslt-dev gcc tini libpng freetype ${BUILD_DEPS} && \
    ln -s /usr/bin/pip3 /usr/bin/pip && \
    ln -s /usr/include/locale.h /usr/include/xlocale.h && \
    pip install --no-cache-dir -r requirements.txt && \
    wget -O dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/v0.3.0/dockerize-linux-${DOCKERIZE_ARCH}-v0.3.0.tar.gz && \
    tar -xzvf dockerize.tar.gz && \
    rm dockerize.tar.gz && \
    mv dockerize /usr/local/bin/ && \
    apk del ${BUILD_DEPS} && \
    chmod +x /usr/local/bin/gunicornup.sh && \
    chmod +x /usr/local/bin/pythonstart.sh && \
    mkdir -p /usr/src/logs/

WORKDIR /usr/src/app

VOLUME ["/usr/src/logs/","/usr/src/app/static"]
ENTRYPOINT ["tini", "--", "pythonstart.sh"]

LABEL org.label-schema.version=$VERSION \
    org.label-schema.name="Monitcollector" \
    org.label-schema.vcs-ref=$VCS_REF \
    org.label-schema.vcs-url=$VCS_URL \
    org.label-schema.build-date=$BUILD_DATE \
    org.label-schema.schema-version="1.0" \
    org.label-schema.docker.cmd="docker run -d -e LISTEN_PORT=8000 -p 8000:8000  whatever4711/monitcollector:amd64-latest" \
    org.label-schema.vendor="Marcel Grossmann" \
    org.label-schema.architecture=$ARCH
